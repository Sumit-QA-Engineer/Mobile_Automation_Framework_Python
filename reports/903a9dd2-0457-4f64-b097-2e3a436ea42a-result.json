{"name": "test_user_logout", "status": "failed", "statusDetails": {"message": "AssertionError: !!!! Test Failed! Pre-condition does not met - User is not logged in the application !!!!\nassert False\n +  where False = <bound method loginScreen.verify_login of <src.main.pages.login_screen.loginScreen object at 0x000001CF9D0DBC10>>()\n +    where <bound method loginScreen.verify_login of <src.main.pages.login_screen.loginScreen object at 0x000001CF9D0DBC10>> = <src.main.pages.login_screen.loginScreen object at 0x000001CF9D0DBC10>.verify_login\n +      where <src.main.pages.login_screen.loginScreen object at 0x000001CF9D0DBC10> = loginScreen(<appium.webdriver.webdriver.WebDriver (session=\"0072e2ef93af12a8d6b5c81a1f69da556f4ce0d0\")>)", "trace": "fixturefunc = <function pre_condition_1 at 0x000001CF9D0B9F80>, request = <FixtureRequest for <Function test_user_logout>>\nkwargs = {'appium_driver': <appium.webdriver.webdriver.WebDriver (session=\"0072e2ef93af12a8d6b5c81a1f69da556f4ce0d0\")>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\nvenv\\Lib\\site-packages\\_pytest\\fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nappium_driver = <appium.webdriver.webdriver.WebDriver (session=\"0072e2ef93af12a8d6b5c81a1f69da556f4ce0d0\")>\n\n    @given('User is logged in the application')\n    def pre_condition_1(appium_driver):\n        global driver\n        driver = appium_driver\n>       assert loginScreen(driver).verify_login(), (\"!!!! Test Failed! Pre-condition does not met - User is not \"\n                                                           \"logged in the application !!!!\")\nE       AssertionError: !!!! Test Failed! Pre-condition does not met - User is not logged in the application !!!!\nE       assert False\nE        +  where False = <bound method loginScreen.verify_login of <src.main.pages.login_screen.loginScreen object at 0x000001CF9D0DBC10>>()\nE        +    where <bound method loginScreen.verify_login of <src.main.pages.login_screen.loginScreen object at 0x000001CF9D0DBC10>> = <src.main.pages.login_screen.loginScreen object at 0x000001CF9D0DBC10>.verify_login\nE        +      where <src.main.pages.login_screen.loginScreen object at 0x000001CF9D0DBC10> = loginScreen(<appium.webdriver.webdriver.WebDriver (session=\"0072e2ef93af12a8d6b5c81a1f69da556f4ce0d0\")>)\n\nsrc\\python\\tests\\test_TC_005_user_logout.py:21: AssertionError"}, "description": "user_logout.feature: Successful Logout", "attachments": [{"name": "stdout", "source": "4bc19581-dbe5-4025-b7d2-1fdb5b03d306-attachment.txt", "type": "text/plain"}], "start": 1692275830445, "stop": 1692275840742, "uuid": "4a43c410-a5d0-4c73-8ee1-f0fa8bb7a337", "historyId": "86c71ee7a678c436bf305296032d4b6b", "testCaseId": "86c71ee7a678c436bf305296032d4b6b", "fullName": "src.python.tests.test_TC_005_user_logout#test_user_logout", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "src.python.tests"}, {"name": "suite", "value": "test_TC_005_user_logout"}, {"name": "host", "value": "HAMILTON-QA11L"}, {"name": "thread", "value": "17924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.python.tests.test_TC_005_user_logout"}]}